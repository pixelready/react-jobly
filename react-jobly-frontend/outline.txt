

<App />
    - State: none
    - Props: none
    - Renders Jobly

    <Nav />
        - Links to Home, Jobs, Companies
        - State: 
        - Props:
        + no error handling, but there will be a redirect (bogus /jkjkkjk will take you back to /home)
        + present across pages/endpoints

    <Routes />
        - State: none
        - Props: none
        - parses URL params to match endpoints and output page components

        <HomePage />
                - State: none
                - Props: none
                - purely presentational

        <CompanyList />
            - Requests list of all companies on load, handles search callback to update list
            - State: 
                + [companies, setCompanies] 
                    # will have key that is the company id as it exists in db, from axios req
            - Props: 
                + handleSearch, fn passed to SearchBar
                    takes search params and makes axios req to API, 
                    parses JSON and passes list(arr) of matching companies(objs) to the CompanyList 

            <SearchBar />
                - State: [formData, setFormData]
                - Props: handleSearch
                - a simple form, grabs the query someone passed in and calls handleSearch to make axios req  
                    for matching companies to display, updates companies state in Companies

            <CompanyCardList />
                - Displays list of company cards
                - State: none
                - Props: companies, a list of matching companies to display
    
                <CompanyCard />
                - Displays company detail as a card
                    - State: none
                    - Props: company, data on a single company to render into a card

        <CompanyDetail />
            - Displays company name, description and a list of jobs owned by that company
            - State: [currCo, setCurrCo] (currCo = {name, desc, jobs = [{job1}, {job2}, ...])
            - Props: (uses URL param)

            <JobCardList />
            - Displays the list of job cards for the company
                - State: none
                - Props: jobs 

                <JobCard />
                - Displays details of job for the company
                    - State: none
                    - Props: job
        <Jobs />
            - Requests list of all jobs on load, handles search callback to update list
            - State: 
                + [jobs, setJobs] 
                    # will have key that is the job id as it exists in db, from axios req
            - Props: 
                + handleSearch, fn passed to SearchBar, 
                    takes search params and makes axios req to API, 
                    parses JSON and passes list(arr) of matching jobs(objs) to the JobList 

            <SearchBar />
                - State: [formData, setFormData]
                - Props: handleSearch
                - a simple form, grabs the query someone passed in and calls handleSearch to make axios req  
                    for matching jobs to display, updates jobs state in Jobs

            <JobCardList />
                - Displays the list of job cards
                - State: none
                - Props: jobs, a list of matching jobs to display

                <JobCard />
                    - Displays job details as a card
                    - State: none
                    - Props: job, data on a single job to render into a card

        